#!/usr/bin/env ruby
# example signed url
# https://s3.amazonaws.com/music19671025/Away+Down+The+Road/03+Sail+Away%2C+Ladies.mp3?AWSAccessKeyId=AKIAJBHAI75QI6ANOM4Q&Expires=1286069685&Signature=WLIPUFpyaWey5xcOSOaiKEKjCxk%3D&x-amz-security-token=%7BUserToken%7DAAUHVXNlclRrbpuuU42WbDTJlQtJ/RD1oD9Mlv%2BdUl0RzI2eIkr%2B0FlkIWOfOXWKSQcJ35tB4DbTHq9qSC4A9MeKOr3aHi2PZZ1/63kPvz0ld2L3L4qZg0W70L8I1UQtaa6kuYfVxgpbscBOimvsmKTOTPiZOdABnDRBrKc31/BZpirgl5VD9tY4/%2BAL/OnNXJdndXQRRLbnaVd0B2vUgf3sjD65sMakRtHxHdIwi5Rnf6LlGfgv56jGmaCADMIabx3h8uhd1IcC/94V3jfWMepO%2BnbzBcefbgR223Fhdt9cimcw37ji5Hn5Ba7BBPcXwcD56EFDr3MESwQS2YMxFakgS227endNPKY%3D

#&
require 'rubygems'
require 'right_aws'
require 'fileutils'

RHINO_HOME = "/Users/dante/rhino1_7R2"
# gold!
# https://s3.amazonaws.com/music19671025/Away+Down+The+Road/01+Muskrat.mp3?AWSAccessKeyId=0326Q1B6BA9DDXD1PQR2&Expires=1286248115&SignatureMethod=HmacSHA256&SignatureVersion=2&Signature=sjZ9iJmkAn9Uhxg6Q7vaEokQwh0%3D
# note that it uses actual AWSAccessKeyId

# File 'lib/awsbase/right_awsbase.rb', line 85

@@digest1 = OpenSSL::Digest::Digest.new("sha1")
@@digest256 = OpenSSL::Digest::Digest.new("sha256") rescue nil


def sign_request_v2(aws_secret_access_key, service_hash, http_verb, host, uri)
  RightAws::AwsUtils.fix_service_params(service_hash, '2')
  # select a signing method (make an old openssl working with sha1)
  # make 'HmacSHA256' to be a default one
  service_hash['SignatureMethod'] = 'HmacSHA256' unless ['HmacSHA256', 'HmacSHA1'].include?(service_hash['SignatureMethod'])
  service_hash['SignatureMethod'] = 'HmacSHA1'   unless @@digest256
  # select a digest
  digest = (service_hash['SignatureMethod'] == 'HmacSHA256' ? @@digest256 : @@digest1)
  # form string to sign
  canonical_string = service_hash.keys.sort.map do |key|
    "#{RightAws::AwsUtils.amz_escape(key)}=#{RightAws::AwsUtils.amz_escape(service_hash[key])}"
  end.join('&')
  
  
  # GET\n\n\n1286248115\n/music19671025/Away+Down+The+Road/01+Muskrat.mp3
  
  

  puts "canonical string:"
  puts canonical_string
  puts
  
  
  #string_to_sign = "#{http_verb.to_s.upcase}\n#{host.downcase}\n#{uri}\n#{canonical_string}"
  
  string_to_sign = "#{http_verb.to_s.upcase}\n\n\n#{service_hash["Expires"]}\n#{uri}"
  
  js_sts = "GET\n\n\n1286248515\n/music19671025/Away+Down+The+Road/01+Muskrat.mp3"
  
  
  
  puts "string to sign:"
  puts string_to_sign
  puts js_sts
  
  hex_ary = [] 
  string_to_sign.each_char do |ch|
    hexnum = ch.unpack('H*')[0]
    #puts "ch = #{ch} and hexnum = #{hexnum}" if hexnum.to_s == "34" or hexnum.to_s == "38"
    hex_ary.push(hexnum)
  end
  
  puts "hex string:"
  puts hex_ary.join " "
  
  pwd = FileUtils.pwd
  signature = `cd #{RHINO_HOME} && java -jar -jar js-14.jar #{pwd}/getsignature.js "#{hex_ary.join(" ")}"`.chomp
  puts "signature from rhino = #{signature}"
  
  puts
  
  # sign the string
  #signature      = RightAws::AwsUtils.amz_escape(Base64.encode64(OpenSSL::HMAC.digest(digest, aws_secret_access_key, string_to_sign)).strip)
  #"#{canonical_string}&Signature=#{signature}"
  #signature      = Base64.encode64(OpenSSL::HMAC.digest(digest, aws_secret_access_key, string_to_sign)).strip
  
  puts "signature:"
  puts signature
  puts
  
  "#{canonical_string}&Signature=#{signature}"
end

aws_auth = YAML.load_file("#{ENV["HOME"]}/.s3conf/s3config.yml")


secret_key = aws_auth["aws_secret_access_key"]
access_key = aws_auth["aws_access_key_id"]


now = Time.now.to_i

hour = (60 * 60)

expires = now + (48 * hour)

host = "s3.amazonaws.com"
uri = "/music19671025/Away+Down+The+Road/01+Muskrat.mp3"



service_hash = {"Expires" => expires}
#signature = RightAws::AwsUtils.sign_request_v2(secret_key, service_hash, "GET", host, uri)
signature = sign_request_v2(secret_key, service_hash, "GET", host, uri)


result = "https://#{host}#{uri}?AWSAccessKeyId=#{access_key}&#{signature}"
#result = "https://#{host}#{uri}?#{signature}"

puts result

